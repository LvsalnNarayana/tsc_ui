import React, { useState } from "react";
import { Link, useLocation, useNavigate } from "react-router-dom";

import {
  Box,
  List,
  Stack,
  Drawer,
  ListItem,
  Container,
  IconButton,
  Typography,
  ListItemText,
  useMediaQuery,
  Button,
} from "@mui/material";
import { useLanguage } from "../../LanguageContext";
import TranslateIcon from "@mui/icons-material/Translate";
const Header = () => {
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const { language, toggleLanguage } = useLanguage();
  const mobileView = useMediaQuery((theme) => {
    return theme.breakpoints.down("tablet");
  });
  const tabletView = useMediaQuery((tabletTheme) => {
    return tabletTheme.breakpoints.between("tablet", "laptop");
  });

  const links = [
    { path: "/", label: "Home" },
    { path: "/about-us", label: "About Us" },
    { path: "/products", label: "Products" },
    { path: "/services", label: "Services" },
    { path: "/contact-us", label: "Contact Us" },
  ];

  const [drawerOpen, setDrawerOpen] = useState(false);

  const handleDrawerToggle = () => {
    setDrawerOpen(!drawerOpen);
  };

  return (
    <Stack
      p={2}
      gap={3}
      direction="row"
      justifyContent="space-between"
      alignItems="center"
      width="100vw"
      maxWidth="100vw"
      height="87px"
      sx={{
        top: 0,
        left: 0,
        zIndex: 100,
        position: "fixed",
        overflowX: "hidden",
        backgroundColor: "rgba(0, 0, 0, 0.05)",
        borderBottom: "1px solid rgba(224, 224, 224, 0.10)",
      }}
    >
      <Box
        component="div"
        sx={{
          top: 0,
          left: 0,
          zIndex: 10,
          width: "100%",
          height: "100%",
          position: "absolute",
          backdropFilter: "blur(20px)",
          WebkitBackdropFilter: "blur(20px)",
          backgroundColor: "rgba(0, 0, 0, 0.05)",
        }}
      />
      <Container maxWidth="desktop">
        <Stack
          direction="row"
          justifyContent="space-between"
          alignItems="center"
          width="100%"
          sx={{
            zIndex: 40,
            position: "relative",
          }}
        >
          <Link to="/" style={{ color: "white", textDecoration: "none" }}>
            {/* <svg
              xmlns="http://www.w3.org/2000/svg"
              width="45"
              height="45"
              viewBox="0 0 102 110"
              fill="none"
            >
              <path
                d="M50.5666 8.80331C53.0627 8.80331 55.0863 6.83262 55.0863 4.40165C55.0863 1.97069 53.0627 0 50.5666 0C48.0704 0 46.0469 1.97069 46.0469 4.40165C46.0469 6.83262 48.0704 8.80331 50.5666 8.80331Z"
                fill="#41C4DA"
              />
              <path
                d="M96.0705 33.901C98.5666 33.901 100.59 31.9303 100.59 29.4993C100.59 27.0683 98.5666 25.0977 96.0705 25.0977C93.5743 25.0977 91.5508 27.0683 91.5508 29.4993C91.5508 31.9303 93.5743 33.901 96.0705 33.901Z"
                fill="#41C4DA"
              />
              <path
                d="M96.3127 85.2955C98.8088 85.2955 100.832 83.3248 100.832 80.8938C100.832 78.4629 98.8088 76.4922 96.3127 76.4922C93.8165 76.4922 91.793 78.4629 91.793 80.8938C91.793 83.3248 93.8165 85.2955 96.3127 85.2955Z"
                fill="#41C4DA"
              />
              <path
                d="M65.5084 18.6333L63.4325 19.9154C63.4325 19.9154 60.1347 22.2493 59.2019 22.4156C57.8144 22.6613 56.3192 21.1361 53.2842 21.0158C49.9365 20.8827 47.3613 21.479 45.6796 23.5774C45.6796 23.5774 40.5844 27.7411 44.5286 33.6629C44.5286 33.6629 46.8305 37.9058 53.2422 36.3857C53.2422 36.3857 60.5998 35.5464 61.0097 28.2606C61.0097 28.2606 61.1201 26.0751 62.6389 24.8058C62.97 24.5294 69.2871 20.4042 69.2871 20.4042C69.2871 20.4042 69.9729 19.8719 70.2883 19.8667C70.6509 19.8591 70.8217 20.0152 71.6336 20.2839C72.8293 20.6805 74.6897 20.9723 76.5869 19.9768C76.5869 19.9768 80.6468 17.2949 77.4094 13.1721C77.4094 13.1721 74.2036 9.60988 70.1753 12.5324C70.1753 12.5324 68.9823 13.1389 68.5014 15.0224C68.391 15.4574 68.5723 16.0204 68.3069 16.5374C68.3043 16.5425 67.2296 17.346 67.2296 17.346L65.511 18.6384L65.5084 18.6333Z"
                fill="#41C4DA"
              />
              <path
                d="M14.0157 51.5054L16.1495 50.3155C16.1495 50.3155 19.5524 48.1274 20.4931 48.002C21.891 47.8178 23.3153 49.407 26.3424 49.6603C29.6823 49.9393 32.2785 49.4582 34.0548 47.4339C34.0548 47.4339 39.3365 43.498 35.6682 37.4074C35.6682 37.4074 33.5634 33.0697 27.0887 34.3083C27.0887 34.3083 19.6995 34.8278 18.9559 42.088C18.9559 42.088 18.7457 44.2657 17.169 45.4685C16.8248 45.7296 10.3238 49.5784 10.3238 49.5784C10.3238 49.5784 9.6143 50.08 9.29897 50.0723C8.93634 50.0621 8.7708 49.9009 7.97459 49.5964C6.8 49.1485 4.95271 48.7774 3.01081 49.6885C3.01081 49.6885 -1.16728 52.1913 1.87563 56.4496C1.87563 56.4496 4.91329 60.1475 9.07298 57.4042C9.07298 57.4042 10.2922 56.8488 10.8598 54.9909C10.9912 54.561 10.8336 53.9903 11.1252 53.4862C11.1279 53.4811 12.2394 52.7236 12.2394 52.7236L14.0157 51.508V51.5054Z"
                fill="#708090"
              />
              <path
                d="M14.0157 77.1207L16.1495 75.9307C16.1495 75.9307 19.5524 73.7427 20.4931 73.6173C21.891 73.433 23.3153 75.0222 26.3424 75.2756C29.6823 75.5545 32.2785 75.0734 34.0548 73.0492C34.0548 73.0492 39.3365 69.1133 35.6682 63.0226C35.6682 63.0226 33.5634 58.6849 27.0887 59.9235C27.0887 59.9235 19.6995 60.443 18.9559 67.7032C18.9559 67.7032 18.7457 69.881 17.169 71.0838C16.8248 71.3448 10.3238 75.1937 10.3238 75.1937C10.3238 75.1937 9.6143 75.6953 9.29897 75.6876C8.93634 75.6774 8.7708 75.5161 7.97459 75.2116C6.8 74.7638 4.95271 74.3927 3.01081 75.3037C3.01081 75.3037 -1.16728 77.8065 1.87563 82.0649C1.87563 82.0649 4.91329 85.7628 9.07298 83.0194C9.07298 83.0194 10.2922 82.4641 10.8598 80.6062C10.9912 80.1763 10.8336 79.6056 11.1252 79.1014C11.1279 79.0963 12.2394 78.3388 12.2394 78.3388L14.0157 77.1233V77.1207Z"
                fill="#708090"
              />
              <path
                d="M36.5431 89.2888L38.6768 88.0988C38.6768 88.0988 42.0797 85.9107 43.0204 85.7853C44.4184 85.6011 45.8426 87.1903 48.8698 87.4436C52.2096 87.7226 54.8058 87.2415 56.5821 85.2172C56.5821 85.2172 61.8639 81.2813 58.1956 75.1907C58.1956 75.1907 56.0908 70.853 49.616 72.0916C49.616 72.0916 42.2269 72.6111 41.4832 79.8713C41.4832 79.8713 41.273 82.0491 39.6964 83.2518C39.3521 83.5129 32.8511 87.3617 32.8511 87.3617C32.8511 87.3617 32.1416 87.8633 31.8263 87.8557C31.4637 87.8454 31.2981 87.6842 30.5019 87.3797C29.3273 86.9318 27.48 86.5608 25.5382 87.4718C25.5382 87.4718 21.3601 89.9746 24.403 94.2329C24.403 94.2329 27.4406 97.9308 31.6003 95.1875C31.6003 95.1875 32.8196 94.6322 33.3872 92.7742C33.5186 92.3443 33.3609 91.7736 33.6526 91.2695C33.6552 91.2644 34.7667 90.5069 34.7667 90.5069L36.5431 89.2913V89.2888Z"
                fill="#708090"
              />
              <path
                d="M60.2111 51.0212L62.3448 49.8312C62.3448 49.8312 65.7477 47.6432 66.6884 47.5178C68.0864 47.3335 69.5106 48.9227 72.5377 49.1761C75.8776 49.455 78.4738 48.9739 80.2501 46.9496C80.2501 46.9496 85.5318 43.0137 81.8635 36.9231C81.8635 36.9231 79.7587 32.5854 73.284 33.824C73.284 33.824 65.8948 34.3435 65.1512 41.6037C65.1512 41.6037 64.941 43.7815 63.3643 44.9843C63.0201 45.2453 56.5191 49.0942 56.5191 49.0942C56.5191 49.0942 55.8096 49.5958 55.4943 49.5881C55.1317 49.5778 54.9661 49.4166 54.1699 49.1121C52.9953 48.6642 51.148 48.2932 49.2061 49.2042C49.2061 49.2042 45.028 51.707 48.0709 55.9654C48.0709 55.9654 51.1086 59.6633 55.2683 56.9199C55.2683 56.9199 56.4876 56.3646 57.0552 54.5067C57.1865 54.0767 57.0289 53.5061 57.3206 53.0019C57.3232 52.9968 58.4347 52.2393 58.4347 52.2393L60.2111 51.0237V51.0212Z"
                fill="#41C4DA"
              />
              <path
                d="M50.2784 62.5629C54.5915 62.5629 58.088 59.1577 58.088 54.9572C58.088 50.7567 54.5915 47.3516 50.2784 47.3516C45.9652 47.3516 42.4688 50.7567 42.4688 54.9572C42.4688 59.1577 45.9652 62.5629 50.2784 62.5629Z"
                fill="#41C4DA"
              />
              <path
                d="M74.9774 73.9654C74.9774 73.9654 81.2104 72.8854 81.1841 66.6515C81.1841 66.6515 81.1657 64.7808 82.3955 63.624C82.5558 63.4731 84.7815 61.6663 86.3345 60.4917L87.6116 59.6626C87.6116 59.6626 89.8556 57.9991 90.4968 57.8712C91.4507 57.6818 92.5097 58.7131 94.6092 58.7515C96.9269 58.7925 98.6953 58.3446 99.8252 56.868C99.8252 56.868 103.283 53.9148 100.461 49.8791C100.461 49.8791 98.8031 46.9797 94.3937 48.1287C94.3937 48.1287 89.3222 48.8197 89.1514 53.8611C89.1514 53.8611 89.1094 55.3735 88.0793 56.2743C87.9479 56.3895 86.4081 57.4541 85.1599 58.3139L85.1362 58.2807C85.1362 58.2807 80.1199 61.5717 79.3316 61.7559C78.1622 62.0323 76.8037 60.8039 74.2101 60.8525C71.3459 60.9037 69.1807 61.5384 67.8563 63.4116C67.8563 63.4116 63.7229 67.2145 67.3964 72.0742C67.3964 72.0742 69.5801 75.5802 74.9722 73.9679L74.9774 73.9654Z"
                fill="#41C4DA"
              />
              <path
                d="M32.0232 13.7978C32.0232 13.7978 30.6805 11.4486 27.1041 12.3775C27.1041 12.3775 22.9917 12.938 22.8551 17.0248C22.8551 17.0248 22.8209 18.2507 21.9853 18.98C21.8776 19.0747 11.8633 26.189 11.3483 26.3169C10.5836 26.5063 9.6849 25.7104 7.98213 25.7591C6.10331 25.8128 4.68959 26.2427 3.83295 27.4813C3.83295 27.4813 1.15004 30.0046 3.59383 33.1651C3.59383 33.1651 5.05222 35.4504 8.576 34.3551C8.576 34.3551 12.6569 33.6053 12.5938 29.5158C12.5938 29.5158 12.5675 28.29 13.3663 27.5223C13.4688 27.425 23.4227 20.3824 23.943 20.2775C24.7181 20.1239 25.5748 20.9607 27.2775 20.9915C29.1564 21.0247 30.5911 20.6613 31.5056 19.4637C31.5056 19.4637 34.3093 17.0684 32.0206 13.7978H32.0232Z"
                fill="#708090"
              />
              <path
                d="M77.2524 90.7049C77.2524 90.7049 76.0647 88.2763 72.4358 88.9851C72.4358 88.9851 68.2945 89.2897 67.8925 93.3612C67.8925 93.3612 67.7795 94.5819 66.8992 95.2601C66.7862 95.3471 56.3278 101.829 55.8049 101.927C55.0297 102.067 54.1836 101.22 52.4808 101.161C50.6046 101.1 49.162 101.44 48.2292 102.625C48.2292 102.625 45.3886 104.977 47.6222 108.283C47.6222 108.283 48.9281 110.653 52.5176 109.778C52.5176 109.778 56.6379 109.281 56.8402 105.194C56.8402 105.194 56.8928 103.969 57.7416 103.252C57.8493 103.16 68.242 96.7469 68.7675 96.6752C69.5506 96.5703 70.352 97.4583 72.0495 97.5939C73.9205 97.7424 75.3762 97.4686 76.3695 96.3298C76.3695 96.3298 79.3231 94.1136 77.2524 90.7074V90.7049Z"
                fill="#708090"
              />
            </svg> */}
            <Box
              component="img"
              src="/header_logo.png"
              sx={{ height: "60px" }}
            />
          </Link>
          {mobileView || tabletView ? (
            <IconButton
              onClick={handleDrawerToggle}
              sx={{ zIndex: 50, color: "white" }}
            >
              <Box component="img" src="/menu_icon.svg" />
            </IconButton>
          ) : (
            <Stack
              direction="row"
              justifyContent="flex-end"
              alignItems="center"
            >
              {links.map((link) => {
                return (
                  <Link
                    key={link.path}
                    className="lato"
                    to={link.path}
                    style={{
                      gap: "4px",
                      fontSize: 16,
                      lineHeight: 1,
                      color: "white",
                      fontWeight: 400,
                      display: "flex",
                      cursor: "pointer",
                      padding: "10px 24px",
                      alignItems: "center",
                      borderRadius: "99px",
                      textDecoration: "none",
                      justifyContent: "center",
                      transition: "background-color 0.3s ease-in-out",
                      backgroundColor:
                        pathname === link.path
                          ? "rgba(255, 255, 255, 0.10)"
                          : "transparent",
                    }}
                  >
                    {link.label}
                  </Link>
                );
              })}
              <Button onClick={toggleLanguage} sx={{color:"white"}}>
                <TranslateIcon fontSize="small" />
                {language === "en" ? "Arabic" : "English"}
              </Button>
            </Stack>
          )}
          <Drawer anchor="right" open={drawerOpen} onClose={handleDrawerToggle}>
            <Box
              sx={{
                width: 250,
                height: "100%",
                color: "white",
                backgroundColor: "rgba(0, 0, 0, 0.8)",
              }}
            >
              <List>
                {links.map((link) => {
                  return (
                    <ListItem
                      button
                      key={link.path}
                      onClick={handleDrawerToggle}
                    >
                      <Typography
                        onClick={() => {
                          return navigate(link.path, { replace: true });
                        }}
                        style={{
                          fontSize: 16,
                          width: "100%",
                          color: "white",
                          fontWeight: 400,
                          textDecoration: "none",
                        }}
                      >
                        <ListItemText primary={link.label} />
                      </Typography>
                    </ListItem>
                  );
                })}
              </List>
            </Box>
          </Drawer>
        </Stack>
      </Container>
    </Stack>
  );
};

export default Header;
